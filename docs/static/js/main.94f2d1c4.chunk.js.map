{"version":3,"sources":["utils.ts","debounced-clicks.ts","field/field.tsx","board-state.ts","board/board.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["classes","flatMap","item","String","Array","Object","entries","filter","map","name","join","arand","min","max","Math","ceil","floor","random","ClickValues","DebouncedClicks","boardState","timerId","values","value","duration","phase","target","logging","resultsValues","contextmenu","Mark","dblclick","Lookup","click","Open","buttonsMapping","0","1","2","3","4","goDown","event","log","elements","get","push","button","startTimer","length","reduce","a","b","reset","flush","goUp","catchResult","type","stopPropagation","preventDefault","cb","window","setTimeout","saveState","clearTimeout","onPress","onClick","console","buttons","valueStr","this","onMouseDownCapture","onMouseUpCapture","onContextMenuCapture","onDoubleClickCapture","Field","props","state","content","isSuggested","count","enabled","settings","element","open","isOpen","setState","isMine","toString","mark","isMarked","board","minesCount","resetAnimation","lookup","around","getAround","marked","n","field","Number","suggest","action","move","Suggest","disable","current","classList","remove","offsetWidth","add","forEach","component","toggle","React","createRef","cssSettings","y","className","suggested","style","ref","set","Component","IFieldSettings","x","assign","BoardState","fields","minesFields","Map","width","height","mines","found","runner","neighbour","includes","starter","Board","timer","won","tick","fillBoard","setInterval","gameOver","checkWin","find","createBoard","listeners","win","loose","clickedField","stop","clearInterval","modes","beginner","default","intermediate","expert","fillModes","synonyms","beginer","small","easy","medium","middle","big","herd","App","hash","location","replace","toLowerCase","test","calcSettings","RegExp","$1","innerWidth","innerHeight","maxSize","minSize","fieldSize","fieldsMaxSide","groups","match","customSettings","key","getSettings","isLandscape","screen","orientation","substr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94f2d1c4.chunk.js","sourcesContent":["export function classes(...classes: Array<string | Array<string> | {[className: string]: boolean}>): string {\r\n    return classes.flatMap(item => {\r\n        if (String(item) === item || item instanceof Array) return item;\r\n        return Object.entries(item).filter(([name, value]) => value).map(([name, flag]) => name)\r\n    }).join(' ')\r\n}\r\n\r\nexport function range(a: number, b?: number) {\r\n    if (a < 0 && b == null) b = -1\r\n    if (b == null) [a, b] = [1, a]\r\n\r\n    const result = []\r\n    for (let i = a; i <= b; i++) result.push(i)\r\n    return result\r\n}\r\n\r\nexport function rand(min: number, max?: number) {\r\n    if (min < 0 && max == null) max = -1\r\n    if (max == null) [min, max] = [1, min]\r\n\r\n    min = Math.ceil(min)\r\n    max = Math.floor(max)\r\n    return Math.floor(Math.random() * (max - min + 1)) + min\r\n}\r\n\r\nexport function arand(min: number, max?: number) {\r\n    if (max == null) [min, max] = [0, min]\r\n\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min\r\n}\r\n","import {BoardState} from \"./board-state\";\r\nimport {Field} from \"./field/field\";\r\n\r\nexport enum ClickValues {\r\n    Open = 1,\r\n    Mark = 2,\r\n    Lookup = 3,\r\n    Suggest\r\n}\r\n\r\nexport abstract class ClickTarget {\r\n    public abstract onClick(action: ClickValues): void\r\n    public abstract onPress(state: boolean, action: ClickValues): void\r\n}\r\n\r\nexport class DebouncedClicks {\r\n    timerId = 0\r\n    values: Array<number> = []\r\n    value: ClickValues = 0\r\n    duration = 64\r\n    phase: boolean | null = null // false = touchstart / mousedown, true = touchend / mouseup, null - nothing\r\n    target: Field | null = null\r\n\r\n    private boardState: BoardState;\r\n    private logging = true\r\n    private resultsValues: {[type: string]: ClickValues} = {\r\n        contextmenu: ClickValues.Mark,\r\n        dblclick: ClickValues.Lookup,\r\n        click: ClickValues.Open\r\n    }\r\n\r\n    private buttonsMapping: {[buttons: number]: number} = {\r\n        0: 1, // left button\r\n        1: 4, // middle/wheel button\r\n        2: 2, // right button\r\n        3: 8, // back button\r\n        4: 16, // forward button\r\n    }\r\n\r\n    constructor(boardState: BoardState) {\r\n        this.boardState = boardState\r\n    }\r\n\r\n    get listeners() {\r\n        return {\r\n            onMouseDownCapture: this.goDown,\r\n            onMouseUpCapture: this.goUp,\r\n            onContextMenuCapture: this.catchResult,\r\n            onDoubleClickCapture: this.catchResult\r\n        }\r\n    }\r\n\r\n    goDown = (event: any): void => {\r\n        this.log('down', event)\r\n        if (this.phase === null) {\r\n            this.target = this.boardState.elements.get(event.target) as Field\r\n        }\r\n\r\n        this.phase = false\r\n        this.values.push(this.buttonsMapping[event.button])\r\n\r\n        this.startTimer(() => {\r\n            this.value = this.values[0]\r\n            if (this.values.length > 1) {\r\n                this.value = this.values.reduce((a, b) => a | b)\r\n            }\r\n\r\n            this.log('pre flush')\r\n            this.reset(true)\r\n            this.flush()\r\n        })\r\n    }\r\n\r\n    goUp = (event: any): void => {\r\n        this.log('up', event)\r\n        this.phase = true\r\n        this.startTimer(this.flush)\r\n    }\r\n\r\n    catchResult = (event: any): void => {\r\n        this.log('catch', event)\r\n\r\n        if (!this.target) this.target = this.boardState.elements.get(event.target) as Field\r\n        if (!this.value) this.value = this.resultsValues[event.type]\r\n        this.phase = true\r\n        this.flush()\r\n\r\n        this.reset()\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n\r\n    private startTimer = (cb: Function) => {\r\n        if (!this.timerId) {\r\n            this.timerId = window.setTimeout(cb, this.duration)\r\n        }\r\n    }\r\n\r\n    private reset = (saveState = false) => {\r\n        this.values = []\r\n\r\n        if (this.timerId) clearTimeout(this.timerId)\r\n        this.timerId = 0\r\n\r\n        if (!saveState) {\r\n            this.value = 0\r\n            this.phase = null\r\n            this.target = null\r\n        }\r\n    }\r\n\r\n    private flush = () => {\r\n        this.log('flush')\r\n        this.target?.onPress(!!this.phase, this.value)\r\n\r\n        if (this.phase) {\r\n            this.target?.onClick(this.value)\r\n            this.reset()\r\n        }\r\n    }\r\n\r\n    private log = (name: string, event?: any) => {\r\n        if (!this.logging) return\r\n        if (event === false) return console.log(name)\r\n\r\n        const {button, buttons, type} = event ?? {}\r\n        const {value, phase} = this\r\n        const valueStr = {1: 'Open', 2: 'Mark', 3: 'Lookup', 4: 'Suggest'}[value]\r\n\r\n        console.log(name,\r\n            {value, valueStr, phase, values: [...this.values]},\r\n            event ? {button, buttons, type, event} : new (class NoEvent {})\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport './field.scss'\r\nimport {classes} from \"../utils\";\r\nimport {IFieldSettings} from \"../board-state\";\r\nimport {ClickTarget, ClickValues} from \"../debounced-clicks\";\r\n\r\ninterface IFieldProps {\r\n    move?: Function;\r\n    lookup?: Function;\r\n    field: IFieldSettings;\r\n}\r\n\r\nexport class Field extends React.Component<IFieldProps> implements ClickTarget {\r\n    state = {\r\n        content: '',\r\n        isSuggested: false,\r\n        count: 0\r\n    }\r\n\r\n    enabled = true;\r\n    settings: IFieldSettings\r\n    private readonly element: React.RefObject<HTMLDivElement>;\r\n\r\n    constructor(props: IFieldProps) {\r\n        super(props);\r\n        this.settings = props.field\r\n        this.settings.component = this\r\n        this.element = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        const cssSettings = {\r\n            '--count': this.state.count,\r\n            '--direction': this.settings.y < 2 ? 1 : -1\r\n        } as React.CSSProperties;\r\n\r\n        return <div\r\n            className={classes(\r\n                'field',\r\n                `around${this.settings.isMine ? 0 : this.settings.value}`,\r\n                {\r\n                    open: this.settings.isOpen as boolean,\r\n                    marked: this.settings.isMarked as boolean,\r\n                    suggested: this.state.isSuggested\r\n                },\r\n            )}\r\n            style={cssSettings}\r\n            ref={this.element}\r\n        >{this.state.content}</div>\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.settings.board?.elements.set(this.element.current as HTMLDivElement, this)\r\n    }\r\n\r\n    open = () => {\r\n        this.settings.isOpen = true\r\n        this.setState({\r\n            content: this.settings.isMine ? '💣' : (this.settings.value || '').toString(),\r\n            isSuggested: false,\r\n        })\r\n    }\r\n\r\n    mark = (state?: boolean) => {\r\n        if (this.settings.isOpen) return\r\n        this.settings.isMarked = state ?? !this.settings.isMarked\r\n        const count = this.settings.board?.minesCount ?? 0\r\n\r\n        this.setState({\r\n            count,\r\n            isSuggested: false,\r\n            content: this.settings.isMarked ? '🚩' : ''\r\n        })\r\n        if (state == null) setTimeout(this.resetAnimation, 0)\r\n    }\r\n\r\n    lookup = () => {\r\n        if (!this.settings.isOpen || !this.settings.value) return\r\n\r\n        const around = this.settings.board?.getAround(this.settings)\r\n        const marked = around?.reduce((n: number, field: IFieldSettings) => n + Number(field.isMarked), 0) ?? 0\r\n\r\n        if (this.props.lookup && this.settings.value === marked) {\r\n            this.props.lookup(this.settings)\r\n        }\r\n    }\r\n\r\n    suggest = () => {\r\n        if (this.settings.isOpen || this.settings.isMarked) return\r\n        this.setState({isSuggested: !this.state.isSuggested})\r\n    }\r\n\r\n    onClick = (action: ClickValues) => {\r\n        // console.log('onClick', {1: 'Open', 2: 'Mark', 3: 'Lookup', 4: 'Suggest'}[action])\r\n        // console.log({button})\r\n        if (!this.enabled) return;\r\n\r\n        switch (action) {\r\n            case ClickValues.Open:\r\n                if (!this.settings.isMarked) {\r\n                    if (this.props.move) this.props.move(this.settings)\r\n                    this.open()\r\n                }\r\n                break\r\n            case ClickValues.Mark:\r\n                this.mark()\r\n                break\r\n            case ClickValues.Lookup:\r\n                this.lookup()\r\n                break\r\n            case ClickValues.Suggest:\r\n                this.suggest()\r\n                break\r\n        }\r\n    }\r\n\r\n    disable = () => {\r\n        this.enabled = false;\r\n    }\r\n\r\n    private resetAnimation = () => {\r\n        this.element.current?.classList.remove('animate')\r\n        void this.element.current?.offsetWidth\r\n        this.element.current?.classList.add('animate')\r\n    }\r\n\r\n    onPress = (state: boolean, action: ClickValues) => {\r\n        if (action !== ClickValues.Lookup) return\r\n        // console.log('onPress', {state, action}, state ? 'release' : 'press', {1: 'Open', 2: 'Mark', 3: 'Lookup', 4: 'Suggest'}[action])\r\n\r\n        this.settings.board\r\n            ?.getAround(this.settings)\r\n            .filter(field => !field.isOpen && !field.isMarked)\r\n            .forEach(field => {\r\n                field.component?.element.current?.classList.toggle('pressed', !state)\r\n            })\r\n    }\r\n}","import {arand} from \"./utils\";\r\nimport {Field} from \"./field/field\";\r\nimport React from \"react\";\r\n\r\nexport interface IBoardSettings {\r\n    width: number;\r\n    height: number;\r\n    mines: number;\r\n}\r\n\r\nexport class IFieldSettings {\r\n    value: number = 0 // 0 - empty, 1..8 - mines are near\r\n    x: number = 0\r\n    y: number = 0\r\n    isOpen?: boolean = false\r\n    isMine?: boolean = false\r\n    isMarked?: boolean = false\r\n\r\n    component?: Field\r\n    board?: BoardState\r\n\r\n    constructor(values: IFieldSettings) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n\r\nexport class BoardState extends Array {\r\n    fields: Array<IFieldSettings> = []\r\n    board: Array<Array<IFieldSettings>> = []\r\n    minesFields: Array<IFieldSettings> = []\r\n    elements: Map<HTMLDivElement, React.Component> = new Map()\r\n\r\n    width = 8\r\n    height = 8\r\n    mines = 8\r\n\r\n\r\n    createBoard(settings: IBoardSettings, empty = false) {\r\n        Object.assign(this, settings);\r\n\r\n        // reset properties\r\n        this.fields = [];\r\n        this.minesFields = [];\r\n        this.board = [];\r\n        for (let x = 0; x < this.width; x++) {\r\n            this.board[x] = []\r\n        }\r\n\r\n        // create fields\r\n        for (let y = 0; y < this.height; y++) {\r\n            for (let x = 0; x < this.width; x++) {\r\n                this.board[x][y] = new IFieldSettings({x, y, value: 0, board: this})\r\n                this.fields.push(this.board[x][y])\r\n            }\r\n        }\r\n    }\r\n\r\n    fillBoard(starter: IFieldSettings) {\r\n        // set mines\r\n        let n = this.mines;\r\n        while (n) {\r\n            const x = arand(this.width)\r\n            const y = arand(this.height)\r\n\r\n            if (!this.board[x][y].isMine && x !== starter.x && y !== starter.y) {\r\n                this.minesFields.push(this.board[x][y])\r\n                this.board[x][y].isMine = true;\r\n                n--;\r\n            }\r\n        }\r\n\r\n        // set values\r\n        this.minesFields.forEach(field => {\r\n            this.getAround(field).forEach(field => field.value++)\r\n        })\r\n    }\r\n\r\n    getAround = (field: IFieldSettings): Array<IFieldSettings> => {\r\n        const {x, y} = field;\r\n        return [\r\n            [x - 1, y - 1], [x, y - 1], [x + 1, y - 1],\r\n            [x - 1, y], /*  ;)  */  [x + 1, y],\r\n            [x - 1, y + 1], [x, y + 1], [x + 1, y + 1],\r\n        ].filter(([x, y]) => x >= 0 && x < this.width && y >= 0 && y < this.height)\r\n            .map(([x, y]) => this.board[x][y])\r\n    }\r\n\r\n    lookup = (field: IFieldSettings) => {\r\n        const found: Array<IFieldSettings> = []\r\n        const runner = (field: IFieldSettings) => {\r\n            const around = this.getAround(field).filter(neighbour => !found.includes(neighbour) && !neighbour.isMarked);\r\n            found.push(...around)\r\n            around.filter(neighbour => !neighbour.value).forEach(runner)\r\n        }\r\n\r\n        runner(field)\r\n        return found\r\n    }\r\n\r\n    get minesCount() {\r\n        return this.mines - this.fields.filter(field => field.isMarked).length\r\n    }\r\n}","import React from \"react\";\r\nimport './board.scss'\r\nimport {Field} from \"../field/field\";\r\nimport {BoardState, IBoardSettings, IFieldSettings} from \"../board-state\";\r\nimport {classes} from \"../utils\";\r\nimport {DebouncedClicks} from \"../debounced-clicks\";\r\n\r\ninterface IBoardProps extends IBoardSettings {\r\n}\r\n\r\nexport class Board extends React.Component<IBoardProps> {\r\n    board = new BoardState()\r\n    click = new DebouncedClicks(this.board)\r\n    timer = 0\r\n    timerId = 0\r\n\r\n    state = {\r\n        won: null\r\n    }\r\n\r\n    constructor(props: IBoardProps) {\r\n        super(props);\r\n        this.board.createBoard(this.props);\r\n        // @ts-ignore\r\n        window.board = this.board\r\n    }\r\n\r\n    render() {\r\n        // console.log('Board.render', this.board)\r\n        const settings = {\r\n            '--columns': this.props.width,\r\n            '--rows': this.props.height,\r\n            '--count': this.board.minesCount\r\n        } as React.CSSProperties;\r\n\r\n        return <div\r\n            {...this.click.listeners}\r\n            className={classes('board', {win: this.state.won === true, loose: this.state.won === false})}\r\n            style={settings}\r\n        >\r\n            {this.board.fields.map(field => (\r\n                <Field field={field} key={`${field.x}.${field.y}`} move={this.move} lookup={this.lookup}/>\r\n            ))}\r\n        </div>;\r\n    }\r\n\r\n    tick = () => {\r\n        this.timer++\r\n        // console.log('Seconds', this.timer)\r\n    }\r\n\r\n    checkWin(clickedField?: IFieldSettings) {\r\n        const closedFound = this.board.fields.find(field => !field.isMine && (!field.isOpen && clickedField !== field))\r\n        if (!closedFound) {\r\n            console.log('Win!', this.timer, 'seconds')\r\n            this.stop()\r\n            this.setState({won: true})\r\n            this.board.minesFields.forEach(field => field.component?.mark(true))\r\n            return true\r\n        }\r\n    }\r\n\r\n    move = (field: IFieldSettings) => {\r\n        if (!this.timer) {\r\n            this.board.fillBoard(field)\r\n            this.timer = 1\r\n            this.timerId = window.setInterval(this.tick, 1000)\r\n        }\r\n\r\n        if (field.isMine) return this.gameOver()\r\n\r\n        if (!this.checkWin(field)) {\r\n            if (!field.value) this.lookup(field)\r\n        }\r\n    }\r\n\r\n    lookup = (field: IFieldSettings) => {\r\n        if (field.isMarked) return;\r\n\r\n        const found = this.board.lookup(field)\r\n        found.forEach(field => !field.isOpen && field.component?.open())\r\n\r\n        const hasMine = found.find((field: IFieldSettings) => field.isMine)\r\n        if (hasMine) this.gameOver()\r\n        else this.checkWin()\r\n\r\n        return found\r\n    }\r\n\r\n    private stop() {\r\n        clearInterval(this.timerId)\r\n        this.board.fields.forEach(field => field.component?.disable())\r\n    }\r\n\r\n    private gameOver() {\r\n        this.setState({won: false})\r\n        console.log('game over')\r\n        this.board.minesFields.forEach(field => field.component?.open())\r\n        this.stop()\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\nimport {Board} from \"./board/board\";\r\nimport {IBoardSettings} from \"./board-state\";\r\n\r\nconst modes: {[mode: string]: IBoardSettings} = {\r\n    beginner: {width: 9, height: 9, mines: 10},\r\n    default: {width: 12, height: 8, mines: 12},\r\n    intermediate: {width: 16, height: 16, mines: 40},\r\n    expert: {width: 30, height: 16, mines: 99},\r\n}\r\n\r\nconst fillModes: {[mode: string]: {min: number, mines: number}} = {\r\n    beginner: {min: 10, mines: 0.12},\r\n    default: {min: 12, mines: 0.125},\r\n    intermediate: {min: 16, mines: 0.15},\r\n    expert: {min: 20, mines: 0.2}\r\n}\r\n\r\nconst synonyms: {[key: string]: string} = {\r\n    beginer: 'beginner',\r\n    small: 'beginner',\r\n    easy: 'beginner',\r\n    min: 'beginner',\r\n    medium: 'intermediate',\r\n    middle: 'intermediate',\r\n    big: 'expert',\r\n    max: 'expert',\r\n    herd: 'expert'\r\n}\r\n\r\nfunction getSettings(): IBoardSettings {\r\n    let hash = window.location.hash.replace('#', '').toLowerCase()\r\n\r\n    if (!hash) return modes.default\r\n    if (hash in synonyms) hash = synonyms[hash]\r\n    if (hash in modes) return modes[hash]\r\n\r\n    if (/^fill:?(\\w+)?$/.test(hash)) {\r\n        const calcSettings = fillModes[RegExp.$1] || fillModes[synonyms[RegExp.$1]] || fillModes.default\r\n        const {innerWidth, innerHeight} = window\r\n        const maxSize = Math.max(innerWidth, innerHeight)\r\n        const minSize = Math.min(innerWidth, innerHeight)\r\n\r\n        const fieldSize = Math.floor(minSize / calcSettings.min)\r\n        const fieldsMaxSide = Math.floor(maxSize / fieldSize)\r\n\r\n        const mines = Math.floor(calcSettings.min * fieldsMaxSide * calcSettings.mines)\r\n\r\n        return innerWidth > innerHeight\r\n            ? {\r\n                mines,\r\n                width: fieldsMaxSide,\r\n                height: calcSettings.min\r\n            }\r\n            : {\r\n                mines,\r\n                width: calcSettings.min,\r\n                height: fieldsMaxSide\r\n            }\r\n    }\r\n\r\n    if (/^custom:/.test(hash)) {\r\n        const groups = hash.match(/^custom:(?<width>\\d+)\\D(?<height>\\d+)\\D(?<mines>\\d+)/)?.groups as {[key: string]: string}\r\n        let customSettings = {} as IBoardSettings\r\n        for (let key in groups) customSettings[key as keyof IBoardSettings] = +groups[key]\r\n        return customSettings\r\n    }\r\n\r\n\r\n    return modes.default\r\n}\r\n\r\nfunction App() {\r\n    let settings = getSettings()\r\n\r\n    // fix for mobile landscape\r\n    const isLandscape = window.screen.orientation.type.substr(0, 4) === 'land'\r\n    const isMobile = window.innerWidth < 800\r\n    // @ts-ignore\r\n    if (isMobile && isLandscape && settings.width < settings.height) {\r\n        [settings.width, settings.height] = [settings.height, settings.width]\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <Board width={settings.width} height={settings.height} mines={settings.mines}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}