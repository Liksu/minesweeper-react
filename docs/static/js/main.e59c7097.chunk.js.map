{"version":3,"sources":["utils.ts","field/field.tsx","board-state.ts","board/board.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["classes","flatMap","item","String","Array","Object","entries","filter","map","name","join","DebouncedClick","cb","timerId","values","duration","next","event","clearTimeout","buttons","isNaN","Number","window","setTimeout","flush","push","value","includes","Math","max","this","arand","min","ceil","floor","random","Field","props","state","content","enabled","count","click","settings","element","open","isOpen","setState","isMine","toString","mark","isMarked","board","minesCount","resetAnimation","lookup","around","getAround","marked","reduce","n","field","onClick","button","move","disable","current","classList","remove","offsetWidth","add","component","React","createRef","cssSettings","y","className","style","onContextMenuCapture","mouseCapture","onContextMenu","onDoubleClick","ref","preventDefault","nativeEvent","Component","IFieldSettings","x","assign","BoardState","fields","minesFields","width","height","mines","found","runner","neighbour","forEach","starter","length","Board","timer","won","tick","fillBoard","setInterval","gameOver","checkWin","find","createBoard","win","loose","clickedField","console","log","stop","clearInterval","modes","beginner","default","intermediate","expert","fillModes","synonyms","beginer","small","easy","medium","middle","big","herd","App","hash","location","replace","toLowerCase","test","calcSettings","RegExp","$1","innerWidth","innerHeight","maxSize","minSize","fieldSize","fieldsMaxSide","groups","match","customSettings","key","getSettings","isLandscape","screen","orientation","type","substr","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e59c7097.chunk.js","sourcesContent":["export function classes(...classes: Array<string | Array<string> | {[className: string]: boolean}>): string {\r\n    return classes.flatMap(item => {\r\n        if (String(item) === item || item instanceof Array) return item;\r\n        return Object.entries(item).filter(([name, value]) => value).map(([name, flag]) => name)\r\n    }).join(' ')\r\n}\r\n\r\nexport class DebouncedClick {\r\n    timerId = 0\r\n    values: Array<number> = []\r\n    duration = 100\r\n    cb?: Function\r\n\r\n    constructor(cb: Function) {\r\n        this.cb = cb\r\n    }\r\n\r\n    next = (event: any): void => {\r\n        if (this.timerId) clearTimeout(this.timerId)\r\n        const buttons = isNaN(Number(event)) ? event.buttons : event\r\n        // console.log('next', {buttons})\r\n        this.timerId = window.setTimeout(this.flush, this.duration)\r\n        this.values.push(buttons)\r\n    }\r\n\r\n    private flush = () => {\r\n        const value = this.values.includes(1) && this.values.includes(2) ? 3 : Math.max(...this.values)\r\n        if (this.cb) this.cb(value)\r\n        this.values = []\r\n        this.timerId = 0\r\n    }\r\n}\r\n\r\nexport function range(a: number, b?: number) {\r\n    if (a < 0 && b == null) b = -1\r\n    if (b == null) [a, b] = [1, a]\r\n\r\n    const result = []\r\n    for (let i = a; i <= b; i++) result.push(i)\r\n    return result\r\n}\r\n\r\nexport function rand(min: number, max?: number) {\r\n    if (min < 0 && max == null) max = -1\r\n    if (max == null) [min, max] = [1, min]\r\n\r\n    min = Math.ceil(min)\r\n    max = Math.floor(max)\r\n    return Math.floor(Math.random() * (max - min + 1)) + min\r\n}\r\n\r\nexport function arand(min: number, max?: number) {\r\n    if (max == null) [min, max] = [0, min]\r\n\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min\r\n}\r\n","import React, {} from \"react\";\r\nimport './field.scss'\r\nimport {classes, DebouncedClick} from \"../utils\";\r\nimport {IFieldSettings} from \"../board-state\";\r\n\r\ninterface IFieldProps {\r\n    move?: Function;\r\n    lookup?: Function;\r\n    field: IFieldSettings;\r\n}\r\n\r\nexport class Field extends React.Component<IFieldProps> {\r\n    state = {\r\n        content: '',\r\n        enabled: true,\r\n        count: 0\r\n    }\r\n\r\n    click: DebouncedClick\r\n    settings: IFieldSettings\r\n    private readonly element: React.RefObject<HTMLDivElement>;\r\n\r\n    constructor(props: IFieldProps) {\r\n        super(props);\r\n        this.click = new DebouncedClick(this.onClick)\r\n        this.settings = props.field\r\n        this.settings.component = this\r\n        this.element = React.createRef();\r\n    }\r\n\r\n    render() {\r\n        const cssSettings = {\r\n            '--count': this.state.count,\r\n            '--direction': this.settings.y < 2 ? 1 : -1\r\n        } as React.CSSProperties;\r\n\r\n        return <div\r\n            className={classes(\r\n                'field',\r\n                `around${this.settings.isMine ? 0 : this.settings.value}`,\r\n                {\r\n                    open: this.settings.isOpen as boolean,\r\n                    marked: this.settings.isMarked as boolean,\r\n                },\r\n            )}\r\n            style={cssSettings}\r\n            onContextMenuCapture={this.mouseCapture}\r\n            // onMouseDown={this.click.next}\r\n            // onMouseDown={e => console.log('down', e.buttons)}\r\n            onContextMenu={() => this.click.next(2)}\r\n            onDoubleClick={() => this.click.next(3)}\r\n            onClick={() => this.click.next(1)}\r\n            ref={this.element}\r\n        >{this.state.content}</div>\r\n    }\r\n\r\n    mouseCapture(event: any) {\r\n        event.preventDefault()\r\n        event.nativeEvent.preventDefault()\r\n    }\r\n\r\n    open = () => {\r\n        this.settings.isOpen = true\r\n        this.setState({content: this.settings.isMine ? '💣' : (this.settings.value || '').toString()})\r\n    }\r\n\r\n    mark = (state?: boolean) => {\r\n        if (this.settings.isOpen) return;\r\n        this.settings.isMarked = state ?? !this.settings.isMarked\r\n        const count = this.settings.board?.minesCount ?? 0\r\n\r\n        this.setState({count, content: this.settings.isMarked ? '🚩' : ''})\r\n        if (state == null) this.resetAnimation()\r\n    }\r\n\r\n    lookup = () => {\r\n        if (!this.settings.isOpen || !this.settings.value) return;\r\n\r\n        const around = this.settings.board?.getAround(this.settings)\r\n        const marked = around?.reduce((n: number, field: IFieldSettings) => n + Number(field.isMarked), 0) ?? 0\r\n\r\n        if (this.props.lookup && this.settings.value === marked) {\r\n            this.props.lookup(this.settings)\r\n        }\r\n    }\r\n\r\n    onClick = (button: any) => {\r\n        // console.log({button})\r\n        if (!this.state.enabled) return;\r\n\r\n        switch (button) {\r\n            case 1:\r\n                if (!this.settings.isMarked) {\r\n                    if (this.props.move) this.props.move(this.settings)\r\n                    this.open()\r\n                }\r\n                break\r\n            case 2:\r\n                this.mark()\r\n                break\r\n            case 3:\r\n                this.lookup()\r\n                break\r\n        }\r\n    }\r\n\r\n    disable = () => {\r\n        this.setState({enabled: false})\r\n    }\r\n\r\n    private resetAnimation = () => {\r\n        this.element.current?.classList.remove('animate')\r\n        void this.element.current?.offsetWidth\r\n        this.element.current?.classList.add('animate')\r\n    }\r\n}","import {arand} from \"./utils\";\r\nimport {Field} from \"./field/field\";\r\n\r\nexport interface IBoardSettings {\r\n    width: number;\r\n    height: number;\r\n    mines: number;\r\n}\r\n\r\nexport class IFieldSettings {\r\n    value: number = 0 // 0 - empty, 1..8 - mines are near\r\n    x: number = 0\r\n    y: number = 0\r\n    isOpen?: boolean = false\r\n    isMine?: boolean = false\r\n    isMarked?: boolean = false\r\n\r\n    component?: Field\r\n    board?: BoardState\r\n\r\n    constructor(values: IFieldSettings) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n\r\nexport class BoardState extends Array {\r\n    fields: Array<IFieldSettings> = []\r\n    board: Array<Array<IFieldSettings>> = []\r\n    minesFields: Array<IFieldSettings> = []\r\n\r\n    width = 8\r\n    height = 8\r\n    mines = 8\r\n\r\n\r\n    createBoard(settings: IBoardSettings, empty = false) {\r\n        Object.assign(this, settings);\r\n\r\n        // reset properties\r\n        this.fields = [];\r\n        this.minesFields = [];\r\n        this.board = [];\r\n        for (let x = 0; x < this.width; x++) {\r\n            this.board[x] = []\r\n        }\r\n\r\n        // create fields\r\n        for (let y = 0; y < this.height; y++) {\r\n            for (let x = 0; x < this.width; x++) {\r\n                this.board[x][y] = new IFieldSettings({x, y, value: 0, board: this})\r\n                this.fields.push(this.board[x][y])\r\n            }\r\n        }\r\n    }\r\n\r\n    fillBoard(starter: IFieldSettings) {\r\n        // set mines\r\n        let n = this.mines;\r\n        while (n) {\r\n            const x = arand(this.width)\r\n            const y = arand(this.height)\r\n\r\n            if (!this.board[x][y].isMine && x !== starter.x && y !== starter.y) {\r\n                this.minesFields.push(this.board[x][y])\r\n                this.board[x][y].isMine = true;\r\n                n--;\r\n            }\r\n        }\r\n\r\n        // set values\r\n        this.minesFields.forEach(field => {\r\n            this.getAround(field).forEach(field => field.value++)\r\n        })\r\n    }\r\n\r\n    getAround = (field: IFieldSettings): Array<IFieldSettings> => {\r\n        const {x, y} = field;\r\n        return [\r\n            [x - 1, y - 1], [x, y - 1], [x + 1, y - 1],\r\n            [x - 1, y], /*  ;)  */  [x + 1, y],\r\n            [x - 1, y + 1], [x, y + 1], [x + 1, y + 1],\r\n        ].filter(([x, y]) => x >= 0 && x < this.width && y >= 0 && y < this.height)\r\n            .map(([x, y]) => this.board[x][y])\r\n    }\r\n\r\n    lookup = (field: IFieldSettings) => {\r\n        const found: Array<IFieldSettings> = []\r\n        const runner = (field: IFieldSettings) => {\r\n            const around = this.getAround(field).filter(neighbour => !found.includes(neighbour) && !neighbour.isMarked);\r\n            found.push(...around)\r\n            around.filter(neighbour => !neighbour.value).forEach(runner)\r\n        }\r\n\r\n        runner(field)\r\n        return found\r\n    }\r\n\r\n    get minesCount() {\r\n        return this.mines - this.fields.filter(field => field.isMarked).length\r\n    }\r\n}","import React from \"react\";\r\nimport './board.scss'\r\nimport {Field} from \"../field/field\";\r\nimport {BoardState, IBoardSettings, IFieldSettings} from \"../board-state\";\r\nimport {classes} from \"../utils\";\r\n\r\ninterface IBoardProps extends IBoardSettings {\r\n}\r\n\r\nexport class Board extends React.Component<IBoardProps> {\r\n    board = new BoardState()\r\n    timer = 0\r\n    timerId = 0\r\n\r\n    state = {\r\n        won: null\r\n    }\r\n\r\n    constructor(props: IBoardProps) {\r\n        super(props);\r\n        this.board.createBoard(this.props);\r\n        // @ts-ignore\r\n        window.board = this.board\r\n    }\r\n\r\n    render() {\r\n        // console.log('Board.render', this.board)\r\n        const settings = {\r\n            '--columns': this.props.width,\r\n            '--rows': this.props.height,\r\n            '--count': this.board.minesCount\r\n        } as React.CSSProperties;\r\n\r\n        return <div className={classes('board', {win: this.state.won === true, loose: this.state.won === false})} style={settings}>\r\n            {this.board.fields.map(field => (\r\n                <Field field={field} key={`${field.x}.${field.y}`} move={this.move} lookup={this.lookup}/>\r\n            ))}\r\n        </div>;\r\n    }\r\n\r\n    tick = () => {\r\n        this.timer++\r\n        // console.log('Seconds', this.timer)\r\n    }\r\n\r\n    checkWin(clickedField?: IFieldSettings) {\r\n        const closedFound = this.board.fields.find(field => !field.isMine && (!field.isOpen && clickedField !== field))\r\n        if (!closedFound) {\r\n            console.log('Win!', this.timer, 'seconds')\r\n            this.stop()\r\n            this.setState({won: true})\r\n            this.board.minesFields.forEach(field => field.component?.mark(true))\r\n            return true\r\n        }\r\n    }\r\n\r\n    move = (field: IFieldSettings) => {\r\n        if (!this.timer) {\r\n            this.board.fillBoard(field)\r\n            this.timer = 1\r\n            this.timerId = window.setInterval(this.tick, 1000)\r\n        }\r\n\r\n        if (field.isMine) return this.gameOver()\r\n\r\n        if (!this.checkWin(field)) {\r\n            if (!field.value) this.lookup(field)\r\n        }\r\n    }\r\n\r\n    lookup = (field: IFieldSettings) => {\r\n        if (field.isMarked) return;\r\n\r\n        const found = this.board.lookup(field)\r\n        found.forEach(field => !field.isOpen && field.component?.open())\r\n\r\n        const hasMine = found.find((field: IFieldSettings) => field.isMine)\r\n        if (hasMine) this.gameOver()\r\n        else this.checkWin()\r\n\r\n        return found\r\n    }\r\n\r\n    private stop() {\r\n        clearInterval(this.timerId)\r\n        this.board.fields.forEach(field => field.component?.disable())\r\n    }\r\n\r\n    private gameOver() {\r\n        this.setState({won: false})\r\n        console.log('game over')\r\n        this.board.minesFields.forEach(field => field.component?.open())\r\n        this.stop()\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\n\nimport {Board} from \"./board/board\";\nimport {IBoardSettings} from \"./board-state\";\n\nconst modes: {[mode: string]: IBoardSettings} = {\n    beginner: {width: 9, height: 9, mines: 10},\n    default: {width: 12, height: 8, mines: 12},\n    intermediate: {width: 16, height: 16, mines: 40},\n    expert: {width: 30, height: 16, mines: 99},\n}\n\nconst fillModes: {[mode: string]: {min: number, mines: number}} = {\n    beginner: {min: 10, mines: 0.12},\n    default: {min: 12, mines: 0.125},\n    intermediate: {min: 16, mines: 0.15},\n    expert: {min: 20, mines: 0.2}\n}\n\nconst synonyms: {[key: string]: string} = {\n    beginer: 'beginner',\n    small: 'beginner',\n    easy: 'beginner',\n    min: 'beginner',\n    medium: 'intermediate',\n    middle: 'intermediate',\n    big: 'expert',\n    max: 'expert',\n    herd: 'expert'\n}\n\nfunction getSettings(): IBoardSettings {\n    let hash = window.location.hash.replace('#', '').toLowerCase()\n\n    if (!hash) return modes.default\n    if (hash in synonyms) hash = synonyms[hash]\n    if (hash in modes) return modes[hash]\n\n    if (/^fill:?(\\w+)?$/.test(hash)) {\n        const calcSettings = fillModes[RegExp.$1] || fillModes[synonyms[RegExp.$1]] || fillModes.default\n        const {innerWidth, innerHeight} = window\n        const maxSize = Math.max(innerWidth, innerHeight)\n        const minSize = Math.min(innerWidth, innerHeight)\n\n        const fieldSize = Math.floor(minSize / calcSettings.min)\n        const fieldsMaxSide = Math.floor(maxSize / fieldSize)\n\n        const mines = Math.floor(calcSettings.min * fieldsMaxSide * calcSettings.mines)\n\n        return innerWidth > innerHeight\n            ? {\n                mines,\n                width: fieldsMaxSide,\n                height: calcSettings.min\n            }\n            : {\n                mines,\n                width: calcSettings.min,\n                height: fieldsMaxSide\n            }\n    }\n\n    if (/^custom:/.test(hash)) {\n        const groups = hash.match(/^custom:(?<width>\\d+)\\D(?<height>\\d+)\\D(?<mines>\\d+)/)?.groups as {[key: string]: string}\n        let customSettings = {} as IBoardSettings\n        for (let key in groups) customSettings[key as keyof IBoardSettings] = +groups[key]\n        return customSettings\n    }\n\n\n    return modes.default\n}\n\nfunction App() {\n    let settings = getSettings()\n\n    // fix for mobile landscape\n    const isLandscape = window.screen.orientation.type.substr(0, 4) === 'land'\n    const isMobile = window.innerWidth < 800\n    // @ts-ignore\n    if (isMobile && isLandscape && settings.width < settings.height) {\n        [settings.width, settings.height] = [settings.height, settings.width]\n    }\n\n    return (\n        <div className=\"App\">\n            <Board width={settings.width} height={settings.height} mines={settings.mines}/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}