{"version":3,"sources":["utils.ts","field/field.tsx","board-state.ts","board/board.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["classes","flatMap","item","String","Array","Object","entries","filter","map","name","join","DebouncedClick","cb","timerId","values","duration","next","event","clearTimeout","window","setTimeout","flush","push","buttons","Math","max","this","arand","min","ceil","floor","random","Field","props","state","content","enabled","click","settings","open","isOpen","setState","isMine","value","toString","mark","isMarked","lookup","around","board","getAround","marked","reduce","n","field","Number","onClick","button","move","disable","component","className","onContextMenuCapture","mouseCapture","onMouseDown","preventDefault","nativeEvent","React","Component","IFieldSettings","x","y","assign","modes","Beginner","width","height","mines","Intermediate","Expert","BoardState","fields","minesFields","found","runner","neighbour","includes","forEach","console","log","starter","Board","timer","won","tick","fillBoard","setInterval","gameOver","checkWin","find","createBoard","win","loose","style","clickedField","stop","clearInterval","defaultSettings","App","location","hash","replace","innerWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c3d32c1.chunk.js","sourcesContent":["export function classes(...classes: Array<string | Array<string> | {[className: string]: boolean}>): string {\r\n    return classes.flatMap(item => {\r\n        if (String(item) === item || item instanceof Array) return item;\r\n        return Object.entries(item).filter(([name, value]) => value).map(([name, flag]) => name)\r\n    }).join(' ')\r\n}\r\n\r\nexport class DebouncedClick {\r\n    timerId = 0\r\n    values: Array<number> = []\r\n    duration = 80\r\n    cb?: Function\r\n\r\n    constructor(cb: Function) {\r\n        this.cb = cb\r\n    }\r\n\r\n    next = (event: any): void => {\r\n        if (this.timerId) clearTimeout(this.timerId)\r\n        this.timerId = window.setTimeout(this.flush, this.duration)\r\n\r\n        this.values.push(event.buttons);\r\n    }\r\n\r\n    private flush = () => {\r\n        if (this.cb) this.cb(Math.max(...this.values))\r\n        this.values = []\r\n        this.timerId = 0\r\n    }\r\n}\r\n\r\nexport function range(a: number, b?: number) {\r\n    if (a < 0 && b == null) b = -1\r\n    if (b == null) [a, b] = [1, a]\r\n\r\n    const result = []\r\n    for (let i = a; i <= b; i++) result.push(i)\r\n    return result\r\n}\r\n\r\nexport function rand(min: number, max?: number) {\r\n    if (min < 0 && max == null) max = -1\r\n    if (max == null) [min, max] = [1, min]\r\n\r\n    min = Math.ceil(min)\r\n    max = Math.floor(max)\r\n    return Math.floor(Math.random() * (max - min + 1)) + min\r\n}\r\n\r\nexport function arand(min: number, max?: number) {\r\n    if (max == null) [min, max] = [0, min]\r\n\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min\r\n}\r\n","import React, {} from \"react\";\r\nimport './field.scss'\r\nimport {classes, DebouncedClick} from \"../utils\";\r\nimport {IFieldSettings} from \"../board-state\";\r\n\r\ninterface IFieldProps {\r\n    move?: Function;\r\n    lookup?: Function;\r\n    field: IFieldSettings;\r\n}\r\n\r\nexport class Field extends React.Component<IFieldProps>{\r\n    state = {\r\n        content: '',\r\n        enabled: true\r\n    }\r\n\r\n    click: DebouncedClick\r\n    settings: IFieldSettings\r\n\r\n    constructor(props: IFieldProps) {\r\n        super(props);\r\n        this.click = new DebouncedClick(this.onClick)\r\n        this.settings = props.field\r\n        this.settings.component = this\r\n        // this.content = `${this.settings.x}.${this.settings.y}`\r\n    }\r\n\r\n    render() {\r\n        return <div className={classes('field', {open: this.settings.isOpen as boolean}, `around${this.settings.value}`)}\r\n                    onContextMenuCapture={this.mouseCapture}\r\n                    onMouseDown={this.click.next}\r\n        >{this.state.content}</div>\r\n    }\r\n\r\n    mouseCapture(event: any) {\r\n        event.preventDefault()\r\n        event.nativeEvent.preventDefault()\r\n    }\r\n\r\n    open = () => {\r\n        this.settings.isOpen = true\r\n        this.setState({content: this.settings.isMine ? '💣' : (this.settings.value || '').toString()})\r\n    }\r\n\r\n    mark = (state?: boolean) => {\r\n        if (this.settings.isOpen) return;\r\n        this.settings.isMarked = state ?? !this.settings.isMarked\r\n        this.setState({content: this.settings.isMarked ? '🚩' : ''})\r\n    }\r\n\r\n    lookup = () => {\r\n        if (!this.settings.isOpen || !this.settings.value) return;\r\n        // const checker = (field: IFieldSettings) => field;\r\n\r\n        const around = this.settings.board?.getAround(this.settings)\r\n        const marked = around?.reduce((n: number, field: IFieldSettings) => n + Number(field.isMarked), 0) ?? 0\r\n\r\n        if (this.props.lookup && this.settings.value === marked) {\r\n            this.props.lookup(this.settings)\r\n        }\r\n    }\r\n\r\n    onClick = (button: any) => {\r\n        // console.log({button})\r\n        if (!this.state.enabled) return;\r\n\r\n        switch (button) {\r\n            case 1:\r\n                if (!this.settings.isMarked) {\r\n                    if (this.props.move) this.props.move(this.settings)\r\n                    this.open()\r\n                }\r\n                break\r\n            case 2:\r\n                this.mark()\r\n                break\r\n            case 3:\r\n                this.lookup()\r\n                break\r\n        }\r\n    }\r\n\r\n    disable = () => {\r\n        this.setState({enabled: false})\r\n    }\r\n}","import {arand, rand} from \"./utils\";\r\nimport {Field} from \"./field/field\";\r\n\r\nexport interface IBoardSettings {\r\n    width: number;\r\n    height: number;\r\n    mines: number;\r\n}\r\n\r\nexport class IFieldSettings {\r\n    value: number = 0 // 0 - empty, 1..8 - mines are near\r\n    x: number = 0\r\n    y: number = 0\r\n    isOpen?: boolean = false\r\n    isMine?: boolean = false\r\n    isMarked?: boolean = false\r\n\r\n    component?: Field\r\n    board?: BoardState\r\n\r\n    constructor(values: IFieldSettings) {\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n\r\nexport const modes: {[mode: string]: IBoardSettings} = {\r\n    Beginner: {width: 9, height: 9, mines: 10},\r\n    Intermediate: {width: 16, height: 16, mines: 40},\r\n    Expert: {width: 30, height: 16, mines: 99},\r\n}\r\n\r\nexport class BoardState extends Array {\r\n    fields: Array<IFieldSettings> = []\r\n    board: Array<Array<IFieldSettings>> = []\r\n    minesFields: Array<IFieldSettings> = []\r\n\r\n    width = 10\r\n    height = 10\r\n    mines = 5\r\n\r\n    createBoard(settings: IBoardSettings, empty = false) {\r\n        Object.assign(this, settings);\r\n        console.log('BoardState.createBoard')\r\n\r\n        // reset properties\r\n        this.fields = [];\r\n        this.minesFields = [];\r\n        this.board = [];\r\n        for (let x = 0; x < this.width; x++) {\r\n            this.board[x] = []\r\n        }\r\n\r\n        // create fields\r\n        for (let y = 0; y < this.height; y++) {\r\n            for (let x = 0; x < this.width; x++) {\r\n                this.board[x][y] = new IFieldSettings({x, y, value: 0, board: this})\r\n                this.fields.push(this.board[x][y])\r\n            }\r\n        }\r\n    }\r\n\r\n    fillBoard(starter: IFieldSettings) {\r\n        // set mines\r\n        let n = this.mines;\r\n        while (n) {\r\n            const x = arand(this.width)\r\n            const y = arand(this.height)\r\n\r\n            if (!this.board[x][y].isMine && x !== starter.x && y !== starter.y) {\r\n                this.minesFields.push(this.board[x][y])\r\n                this.board[x][y].isMine = true;\r\n                n--;\r\n            }\r\n        }\r\n\r\n        // set values\r\n        this.minesFields.forEach(field => {\r\n            this.getAround(field).forEach(field => field.value++)\r\n        })\r\n    }\r\n\r\n    getAround = (field: IFieldSettings): Array<IFieldSettings> => {\r\n        const {x, y} = field;\r\n        return [\r\n            [x - 1, y - 1], [x, y - 1], [x + 1, y - 1],\r\n            [x - 1, y    ], /*  ;)  */  [x + 1, y    ],\r\n            [x - 1, y + 1], [x, y + 1], [x + 1, y + 1],\r\n        ].filter(([x, y]) => x >= 0 && x < this.width && y >= 0 && y < this.height)\r\n            .map(([x, y]) => this.board[x][y])\r\n    }\r\n\r\n    lookup = (field: IFieldSettings) => {\r\n        const found: Array<IFieldSettings> = []\r\n        const runner = (field: IFieldSettings) => {\r\n            const around = this.getAround(field).filter(neighbour => !found.includes(neighbour) && !neighbour.isMarked);\r\n            found.push(...around)\r\n            around.filter(neighbour => !neighbour.value).forEach(runner)\r\n        }\r\n\r\n        runner(field)\r\n        return found\r\n    }\r\n\r\n}","import React from \"react\";\r\nimport './board.scss'\r\nimport {Field} from \"../field/field\";\r\nimport {BoardState, IBoardSettings, IFieldSettings} from \"../board-state\";\r\nimport {classes} from \"../utils\";\r\n\r\ninterface IBoardProps extends IBoardSettings {\r\n}\r\n\r\nexport class Board extends React.Component<IBoardProps> {\r\n    board = new BoardState()\r\n    timer = 0\r\n    timerId = 0\r\n\r\n    state = {\r\n        won: null\r\n    }\r\n\r\n    constructor(props: IBoardProps) {\r\n        super(props);\r\n        this.board.createBoard(this.props);\r\n        // @ts-ignore\r\n        window.board = this.board\r\n    }\r\n\r\n    render() {\r\n        console.log('Board.render', this.board)\r\n        const settings = {\r\n            '--columns': this.props.width,\r\n            '--rows': this.props.height,\r\n        } as React.CSSProperties;\r\n\r\n        return <div className={classes('board', {win: this.state.won === true, loose: this.state.won === false})} style={settings}>\r\n            {this.board.fields.map(field => (\r\n                <Field field={field} key={`${field.x}.${field.y}`} move={this.move} lookup={this.lookup}/>\r\n            ))}\r\n        </div>;\r\n    }\r\n\r\n    tick = () => {\r\n        this.timer++\r\n        // console.log('Seconds', this.timer)\r\n    }\r\n\r\n    checkWin(clickedField?: IFieldSettings) {\r\n        const closedFound = this.board.fields.find(field => !field.isMine && (!field.isOpen && clickedField !== field))\r\n        if (!closedFound) {\r\n            console.log('Win!')\r\n            this.stop()\r\n            this.setState({won: true})\r\n            this.board.minesFields.forEach(field => field.component?.mark(true))\r\n            return true\r\n        }\r\n    }\r\n\r\n    move = (field: IFieldSettings) => {\r\n        if (!this.timer) {\r\n            this.board.fillBoard(field)\r\n            this.timer = 1\r\n            this.timerId = window.setInterval(this.tick, 1000)\r\n        }\r\n\r\n        if (field.isMine) return this.gameOver()\r\n\r\n        if (!this.checkWin(field)) {\r\n            if (!field.value) this.lookup(field)\r\n        }\r\n    }\r\n\r\n    lookup = (field: IFieldSettings) => {\r\n        if (field.isMarked) return;\r\n\r\n        const found = this.board.lookup(field)\r\n        found.forEach(field => field.component?.open())\r\n\r\n        const hasMine = found.find((field: IFieldSettings) => field.isMine)\r\n        if (hasMine) this.gameOver()\r\n        else this.checkWin()\r\n\r\n        return found\r\n    }\r\n\r\n    private stop() {\r\n        clearInterval(this.timerId)\r\n        this.board.fields.forEach(field => field.component?.disable())\r\n    }\r\n\r\n    private gameOver() {\r\n        this.setState({won: false})\r\n        console.log('game over')\r\n        this.board.minesFields.forEach(field => field.component?.open())\r\n        this.stop()\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\n\nimport {Board} from \"./board/board\";\nimport {IBoardSettings, modes} from \"./board-state\";\n\nconst defaultSettings = {width: 12, height: 8, mines: 12} as IBoardSettings\n\nfunction App() {\n    const settings = modes[window.location.hash.replace(/^#/, '')] || defaultSettings\n    if (window.innerWidth < 768 && settings.width > settings.height) {\n        [settings.width, settings.height] = [settings.height, settings.width]\n    }\n\n    return (\n        <div className=\"App\">\n            <Board width={settings.width} height={settings.height} mines={settings.mines}/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}